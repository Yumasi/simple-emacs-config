#+TITLE: Emacs Configuration
#+AUTHOR: Guillaume Pagnoux
#+EMAIL: guillaume.pagnoux@epita.fr

* Configure base editor

** Must-have settings

- Display current time in status bar

#+begin_src emacs-lisp
(display-time)
#+end_src

- Automatic parens pairing

#+begin_src emacs-lisp
(electric-pair-mode)
#+end_src

- Ask for =y= or =n=, instead of =yes= of =no=

#+begin_src emacs-lisp
(fset 'yes-or-no-p 'y-or-n-p)
#+end_src

- Ensure syntax highlighting is enabled

#+begin_src emacs-lisp
(global-font-lock-mode t)
#+end_src

- Display line numbers on the side

#+begin_src emacs-lisp
(global-linum-mode 1)
#+end_src

- Sane GUI setup

#+begin_src emacs-lisp
(menu-bar-mode -1)
(scroll-bar-mode -1)
(tool-bar-mode -1)
(setq column-number-mode t)
(setq inhibit-splash-screen t)
#+end_src

- Disable backup files

#+begin_src emacs-lisp
(setq make-backup-files nil)
#+end_src

- Ensure file ends with a newline

#+begin_src emacs-lisp
(setq require-final-newline t)
#+end_src

- Highlight matching parenthesis,brace,bracket,etc...

#+begin_src emacs-lisp
(show-paren-mode t)
(setq show-pare-delay 0.0)
#+end_src

- Don't ask before following symlinks

#+begin_src emacs-lisp
(setq vc-follow-symlinks t)
#+end_src

- Begin scrolling slightly before the edges

#+begin_src emacs-lisp
(setq scroll-step 1
      scroll-margin 5)
#+end_src

- Highlight current line

#+begin_src emacs-lisp
(global-hl-line-mode)
#+end_src

- Set fill column to 80

#+begin_src emacs-lisp
(setq-default fill-column 80)
#+end_src

** Garbage collector configuration

Allows Emacs to use more memory before calling garbage collection.

#+BEGIN_SRC emacs-lisp
(setq gc-cons-treshold (lsh 200 20))
#+END_SRC

** Color scheme

#+BEGIN_SRC emacs-lisp
(load-theme 'tsdh-dark t)
#+END_SRC

* Personal information

#+BEGIN_SRC emacs-lisp
(setq user-full-name "Xavier Loginard"
      user-mailaddress "xavier.loginard@epita.fr")
#+END_SRC

* Package management

** Package sources

#+BEGIN_SRC emacs-lisp
(setq package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                         ("melpa" . "https://melpa.org/packages/")))
#+END_SRC

** Configure use-package

#+BEGIN_SRC emacs-lisp
(package-initialize)
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(require 'use-package)
(setq use-package-verbose t)
(setq use-package-always-ensure t)
(use-package auto-compile
  :config
  (auto-compile-on-load-mode))
(setq load-prefer-newer t)
#+END_SRC

** Load packages

#+begin_src emacs-lisp
(use-package company
  :init
  (global-company-mode)
  (add-to-list 'company-backends '(company-irony-c-headers company-irony)))
(use-package company-irony)
(use-package company-irony-c-headers)
(use-package fic-mode
  :init (add-hook 'prog-mode-hook 'fic-mode))
(use-package flycheck
  :init (global-flycheck-mode))
(use-package flycheck-irony)
(use-package helm
  :config
  (require 'helm-config)
  (helm-mode 1)
  :bind (("M-x" . helm-M-x)
         ("C-x C-f" . helm-find-files)))
(use-package irony)
(use-package magit)
(use-package projectile)
(use-package rainbow-delimiters
  :init
  (add-hook 'prog-mode-hook 'rainbow-delimiters-mode))
(use-package smart-mode-line
  :init
  (setq sml/no-confirm-load-theme t)
  (setq rm-blacklist "")
  (smart-mode-line-enable))
(use-package which-key
  :init
  (which-key-mode))
#+end_src

* Evil mode

If you love =Vim= but also love =Emacs=: use both!

#+begin_src emacs-lisp
(use-package evil
  :init
  (evil-mode 1))
(use-package evil-magit)
#+end_src

Just uncomment the above.

* Whitespace mode

Highlight trailing whitespaces

#+BEGIN_SRC emacs-lisp
(global-whitespace-mode 1)
(setq-default whitespace-style '(face tab-mark lines-tail trailing))
#+END_SRC

* Prog-mode configuration

  Delete trailing whitespaces
  #+BEGIN_SRC emacs-lisp
    (add-hook 'prog-mode-hook
              (lambda () (add-to-list 'write-file-functions 'delete-trailing-whitespace)))

    (add-hook 'text-mode-hook
              (lambda () (add-to-list 'write-file-functions 'delete-trailing-whitespace)))
  #+END_SRC
* C-mode configuration

-  Indentation: 4 spaces, aligned braces, to tabs

  #+BEGIN_SRC emacs-lisp
    (setq-default c-default-style "linux"
                  c-basic-offset 4
                  indent-tabs-mode nil)
  #+END_SRC

-  Enabling irony-mode and flycheck

  #+BEGIN_SRC emacs-lisp
(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)

(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)
(eval-after-load 'flycheck
  '(add-hook 'flycheck-mode-hook #'flycheck-irony-setup))
  #+END_SRC

* M-x gdb configuration

Enable many-windows mode

#+begin_src emacs-lisp
(setq gdb-many-windows t
      gdb-show-main t)
#+end_src
